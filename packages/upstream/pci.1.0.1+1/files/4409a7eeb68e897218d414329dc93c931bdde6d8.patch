From 4409a7eeb68e897218d414329dc93c931bdde6d8 Mon Sep 17 00:00:00 2001
From: Marcello Seri <marcello.seri@citrix.com>
Date: Tue, 26 Sep 2017 14:59:42 +0100
Subject: [PATCH] Move lookups to string_opt views to further prevent segfaults

Signed-off-by: Marcello Seri <marcello.seri@citrix.com>
---
 bindings/ffi_bindings.ml |  6 +++---
 examples/lspci.ml        | 16 ++++++++++------
 lib/pci.mli              | 12 ++++++------
 lib_test/test_pci.ml     |  2 +-
 4 files changed, 20 insertions(+), 16 deletions(-)

diff --git a/bindings/ffi_bindings.ml b/bindings/ffi_bindings.ml
index c1079d3..6b914d9 100644
--- a/bindings/ffi_bindings.ml
+++ b/bindings/ffi_bindings.ml
@@ -264,15 +264,15 @@ module Bindings (F : Cstubs.FOREIGN) = struct
 
   let pci_lookup_name_1_ary =
     foreign "pci_lookup_name"
-      (Pci_access.t @-> string @-> int @-> int @-> int @-> returning string)
+      (Pci_access.t @-> string @-> int @-> int @-> int @-> returning string_opt)
 
   let pci_lookup_name_2_ary =
     foreign "pci_lookup_name"
-      (Pci_access.t @-> string @-> int @-> int @-> int @-> int @-> returning string)
+      (Pci_access.t @-> string @-> int @-> int @-> int @-> int @-> returning string_opt)
 
   let pci_lookup_name_4_ary =
     foreign "pci_lookup_name"
-      (Pci_access.t @-> string @-> int @-> int @-> int @-> int @-> int @-> int @-> returning string)
+      (Pci_access.t @-> string @-> int @-> int @-> int @-> int @-> int @-> int @-> returning string_opt)
 
   let pci_load_name_list =
     foreign "pci_load_name_list" (Pci_access.t @-> returning int)
diff --git a/examples/lspci.ml b/examples/lspci.ml
index 5f262d2..196fa02 100644
--- a/examples/lspci.ml
+++ b/examples/lspci.ml
@@ -1,5 +1,9 @@
 open Pci
 
+let from_maybe = function
+| Some x -> x
+| None   -> ""
+
 (* This should be equivalent to `lspci -nnnDv` *)
 let lspci_nnnDv pci_access =
   let devs = get_devices pci_access in
@@ -8,17 +12,17 @@ let lspci_nnnDv pci_access =
     Printf.printf "Device: %04x:%02x:%02x.%d\n"
       d.domain d.bus d.dev d.func;
     Printf.printf "Class:  %s [%04x]\n"
-      (lookup_class_name pci_access d.device_class) d.device_class;
+      (from_maybe @@ lookup_class_name pci_access d.device_class) d.device_class;
     Printf.printf "Vendor: %s [%04x]\n"
-      (lookup_vendor_name pci_access d.vendor_id) d.vendor_id;
+      (from_maybe @@ lookup_vendor_name pci_access d.vendor_id) d.vendor_id;
     Printf.printf "Device: %s [%04x]\n"
-      (lookup_device_name pci_access d.vendor_id d.device_id) d.device_id;
+      (from_maybe @@ lookup_device_name pci_access d.vendor_id d.device_id) d.device_id;
     begin match d.subsystem_id with
     | Some (sv_id, sd_id) ->
       Printf.printf "SVendor:\t%s [%04x]\n"
-        (lookup_subsystem_vendor_name pci_access sv_id) sv_id;
+        (from_maybe @@ lookup_subsystem_vendor_name pci_access sv_id) sv_id;
       Printf.printf "SDevice:\t%s [%04x]\n"
-        (lookup_subsystem_device_name pci_access d.vendor_id d.device_id sv_id sd_id) sd_id
+        (from_maybe @@ lookup_subsystem_device_name pci_access d.vendor_id d.device_id sv_id sd_id) sd_id
     | None -> ()
     end;
     begin match d.phy_slot with
@@ -44,6 +48,6 @@ let lspci_nnnDv pci_access =
   and k1_did = 0x0ff7
   and id_160 = 0x113b in
   let n = lookup_subsystem_device_name pci_access nv_vid k1_did nv_vid id_160 in
-  Printf.printf "\"%s\"\n" n
+  Printf.printf "\"%s\"\n" (from_maybe n)
 
 let () = with_access lspci_nnnDv
diff --git a/lib/pci.mli b/lib/pci.mli
index 5b895a1..89eff84 100644
--- a/lib/pci.mli
+++ b/lib/pci.mli
@@ -32,29 +32,29 @@ module Pci_access : sig
   type t
 end
 
-val lookup_class_name : Pci_access.t -> int -> string
+val lookup_class_name : Pci_access.t -> int -> string option
 (** [lookup_class_name a id] wraps pci_lookup_name with the right flags to
     lookup the name for the class whose identifier is [id] using the access
     value [a]. If [libpci] cannot find a match it returns "Class [id]". *)
 
-val lookup_progif_name : Pci_access.t -> int -> int -> string
+val lookup_progif_name : Pci_access.t -> int -> int -> string option
 (** [lookup_progif_name a c_id id] is like {!lookup_class_name} but returns
     the name of the programming interface with ID [id] within the class with ID
     [c_id]. *)
 
-val lookup_vendor_name : Pci_access.t -> int -> string
+val lookup_vendor_name : Pci_access.t -> int -> string option
 (** [lookup_vendor_name a id] is like {!lookup_class_name} but returns
     the name of the PCI vendor with ID [id]. *)
 
-val lookup_device_name : Pci_access.t -> int -> int -> string
+val lookup_device_name : Pci_access.t -> int -> int -> string option
 (** [lookup_device_name a v_id id] is like {!lookup_class_name} but returns
     the name of the device with ID [id] by the vendor with ID [v_id]. *)
 
-val lookup_subsystem_vendor_name : Pci_access.t -> int -> string
+val lookup_subsystem_vendor_name : Pci_access.t -> int -> string option
 (** [lookup_subsystem_vendor_name a id] is like {!lookup_class_name} but
     returns the name of the PCI vendor with ID [id]. *)
 
-val lookup_subsystem_device_name : Pci_access.t -> int -> int -> int -> int -> string
+val lookup_subsystem_device_name : Pci_access.t -> int -> int -> int -> int -> string option
 (** [lookup_subsystem_device_name a v_id d_id sv_id sd_id] is like
     {!lookup_class_name} but returns the name of the PCI subsystem of a device
     with ID [d_id] made by vendor with ID [v_id] whose subvendor and subdevice
diff --git a/lib_test/test_pci.ml b/lib_test/test_pci.ml
index 187bc1e..6ee223b 100644
--- a/lib_test/test_pci.ml
+++ b/lib_test/test_pci.ml
@@ -48,7 +48,7 @@ let test_lookup_functions () =
     Device: 82371AB/EB/MB PIIX4 ACPI [7113]
     SVendor:        Red Hat, Inc [1af4]
     SDevice:        Qemu virtual machine [1100] *)
-  let test_lookup = assert_equal ~printer:(fun x -> x) in
+  let test_lookup s os = assert_equal ~printer:(function | Some x -> x | None -> "") (Some s) os in
   with_dump (fun acc ->
     test_lookup "Bridge" @@ lookup_class_name acc 0x0680;
     test_lookup "Intel Corporation" @@ lookup_vendor_name acc 0x8086;
